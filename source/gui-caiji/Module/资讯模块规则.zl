inc 'remote_local_img.zl'; //将远程图片下载到本地再上传的类

use builtin;
def TRUE 1;
def FALSE 0;
def NORMAL 0;
def RED 1;
def GREEN 2;
def RG_UNIQUE 1;
def RG_NO_UNIQUE 0;
def RG_DOTANY 1;
def RG_NO_DOTANY 0;

Max_CaijiNum = bltGetCaijiNum();

/*当前页下面的分页链接规则*/
page_links_pattern = 'a\\s.*?href=(["|\']?)(http://s\\.1688\\.com/news/-[^ "\'>]+\\.html\\?pageSize=\\d+&beginPage=\\d+)\\1';
/*当前页面中内容的链接规则*/
content_links_pattern = 'a\\s.*?href=(["|\']?)(http://info\\.1688\\.com/news/detail/v\\d+-[^ "\'>]+\\.html)\\1';
title_pattern = '<title>([^<]+)</title>'; //内容页标题的规则
content_pattern = '<div class="detail">\\s*?<div class="d-content">(.*)</div>\\s*?<span class="editor">';
replaceContentPattern = "【<a\\s*?href=\"http://[^\"]+\"[^>]*><font color=\"[^\"]+\"><strong>.*</strong></font></a>】";
catid = bltGetCatid();
modid = bltGetModid();
catname = bltGetCatName();
keywords = array();
mustwords = array();
caiji_url = bltGetWebUrl();
caiji_totalcount = 0;
totalpostNum = 0;
caiji_postfileName = bltGetInitManageUrl(); //获取采集的上传接口文件名

Auth.authorize(&Max_CaijiNum,caiji_url); //域名授权认证

keywords_count = bltGetKeyWords(keywords,mustwords);
if(keywords_count > 0)
	for(i=0;i<keywords_count && caiji_totalcount < Max_CaijiNum;i++)
		print '关键词'+i+':'+keywords[i] + '\n必需包含词:'+
			mustwords[i];
		escape_keyword = bltCurlEncode(keywords[i]);
		print '转义关键词:' + escape_keyword;
		remote_url = 'http://search.china.alibaba.com/news/news_search.htm?keywords=' + escape_keyword + '&newsTabParam=img&n=y';
		print '采集分页：' + remote_url;
		remote_content = bltCurlGetUrl(remote_url);
		//bltInfoBox("抓取到的内容为：" + remote_content);
		page_links = array(); //初始化分页链接数组
		bltRegexMatches(page_links_pattern,2,remote_content,page_links,RG_UNIQUE,RG_NO_DOTANY); /*根据分页链接规则获取底部分页的链接*/
		pagecount = bltArrayInsertString(page_links,remote_url,0); //将当前页链接也压入分页链接数组中
		for(pageindex = 0 ;pageindex < pagecount && caiji_totalcount < Max_CaijiNum; pageindex++)
			print '分页'+pageindex+':'+page_links[pageindex];
			content_links = array(); //初始化内容链接数组
			if(pageindex != 0)
				remote_content = bltCurlGetUrl(page_links[pageindex]); //得到当前分页的内容链接页面
			endif
			contentCount = bltRegexMatches(content_links_pattern,2,remote_content,content_links,RG_UNIQUE,RG_NO_DOTANY); /*根据内容链接规则获取内容链接数组*/
			for(contentIndex = 0 ; contentIndex < contentCount && caiji_totalcount < Max_CaijiNum; contentIndex++)
				if(clsArt.ChkContLinkExist())
					continue;
				endif
				//print content_links[contentIndex] + '可以采集!';
				remote_content = bltCurlGetUrl(content_links[contentIndex]); //根据文章链接得到每篇文章的内容
				if(bltRegexMatchFirst(title_pattern,1,remote_content,&title,0) >=0) //匹配标题
					title = bltTrim(bltRegexReplace('-{1}.*?$','',title,0)); //替换阿里巴巴的信息为空
					if(!bltCheckTitleMust(title,mustwords[i]))
						clsArt.AddToDb_WhenErr(pagestr + title +'\n不包含必须词：'+bltStrReplace('&',' ',mustwords[i]));
						continue;
					endif
					if(clsArt.DetectTitle(title) == 'Y')
						clsArt.AddToDb_WhenErr('<'+title+'>服务端标题已经存在!\n','titleExists');
						continue;
					endif
				else
					clsArt.AddToDb_WhenErr(pagestr+'标题为空!\n');
					continue;
				endif
				if(bltRegexMatchFirst(content_pattern,1,remote_content,&content,1) >= 0) //匹配内容
					content = bltTrim(bltRegexReplace(replaceContentPattern,'',content,0)); //替换阿里巴巴的信息为空
					content = bltStrReplace("\t","",content);
					content = bltStrReplace("\r","",content);
					content = bltStrReplace("\n","",content);
				else
					clsArt.AddToDb_WhenErr(pagestr+'内容为空!\n');
					continue;
				endif
				clsArt.AddToDb();
			endfor
		endfor
	endfor
elif(keywords_count == 0)
	printf('分类的关键词为空\n',RED);
else
	printf('获取分类的关键词时发生错误\n',RED);
endif

bltCheckUserPause();
clsArt.PostDataToWeb();
bltTellSysCaijiStatus(caiji_totalcount,totalpostNum);
print '\n分类['+catname+']一共采集了'+caiji_totalcount+'条信息！发布成功'+totalpostNum+'条信息//////////////////////////////';

class clsArt
	/*检查内容链接地址是否存在*/
	fun ChkContLinkExist()
		global content_links,contentIndex,catid;
		if(bltSqlTableExists('article'))
			sql = "SELECT * FROM article WHERE linkurl='"+bltSqlEscape(content_links[contentIndex])+"' AND catid='"+catid+"'";
			if(!bltSqlQuery(sql))
				bltExit('查询'+sql+'失败');
			elif(bltSqlMoveToNext())
				print bltSqlGetString('linkurl') + '["' + bltSqlGetString('title') + ']"采集地址已经存在！';
				bltSqlRelease();
				return TRUE;
			endif
			bltSqlRelease();
			return FALSE;
		else
			bltSqlExec('CREATE TABLE article (id INTEGER PRIMARY KEY ASC,catid,title,content,state,linkurl)');
			print '创建article资讯数据表！';
			return FALSE;
		endif
	endfun

	/*当标题存在，或者链接内容不符合要求时，可以根据需要将链接加入到数据库中，实现自动过滤功能，下次就会跳过该链接*/
	fun AddToDb_WhenErr(errorStr = '',extraInfo = '')
		global catid,content_links,contentIndex;
		if(bltCheckAutoPass() || extraInfo == 'titleExists')
			errorStr = '系统自动过滤:' + errorStr;
			sql = "INSERT INTO article (catid,title,content,state,linkurl) VALUES ('" + catid + "','" +
					bltSqlEscape(errorStr) + "','','1','" +
					bltSqlEscape(content_links[contentIndex]) + "')";
			if(!bltSqlExec(sql))
				bltExit('执行'+sql+'失败');
			endif
		endif
		if(extraInfo == 'titleExists')
			printf(errorStr,NORMAL);
		else
			printf(errorStr,RED);
		endif
	endfun

	/*检测服务端标题是否存在*/
	fun DetectTitle(title)
		global caiji_url,modid,catid;
		detectUrl = "http://"+ caiji_url +"/mydetectTitle.php";
		bltPostData(detectUrl,array(
						"_zlmy_detectTable",'article_'+bltIntToStr(modid,0,'0'),
						"_zlmy_detectTitle",title,
						"_zlmy_catid",bltIntToStr(catid,0,'0')
						),&output);
		return output;
	endfun

	/*将采集到的数据添加到本地数据库中*/
	fun AddToDb()
		global catname,catid,title,content,content_links,contentIndex,caiji_totalcount;
		sql = "INSERT INTO article (catid,title,content,state,linkurl) VALUES ('" + catid + "','" +
					bltSqlEscape(title) + "','" +
					bltSqlEscape(content) + "','0','" +
					bltSqlEscape(content_links[contentIndex]) + "')";
		if(!bltSqlExec(sql))
			bltExit('执行'+sql+'失败');
		endif
		caiji_totalcount++;
		bltAddProgress(1);
		printf('采集(' + title + ')到本地数据库的['+catname+']分类中\n',GREEN);
	endfun

	/*将数据从本地数据库中读取出来，再发布到网站上*/
	fun PostDataToWeb()
		global catid,modid,caiji_url,catname,totalpostNum,caiji_postfileName,maxCaijiImgs_Num;
		totalRowCount = clsArt.GetTotalNum();
		if(totalRowCount <= 0)
			printf('本地数据库的采集量为0，目前['+catname+"]分类没采集到数据！跳过不继续发布！\n",RED);
			return;
		endif
		if(bltGetMenuCheck("倒序发布"))
			sql = "SELECT * FROM article WHERE catid='" + catid + "' AND state='0' order by id desc";
		else
			sql = "SELECT * FROM article WHERE catid='" + catid + "' AND state='0'";
		endif
		if(!bltSqlQuery(sql))
			bltExit('查询'+sql+'失败');
		endif
		url = "http://" + caiji_url + "/"+caiji_postfileName;
		forward = "http://"+ caiji_url +"/"+caiji_postfileName+"/action/left";
		RowCount = 0;
		for(;bltSqlMoveToNext();bltAddProgressEx(RowCount,totalRowCount))
			RowCount++;
			//bltAddProgressEx(RowCount,totalRowCount);
			hits = bltRandom()%1000 + 200;
			//time = bltGetTimeNow('%Y-%m-%d %H:%M:%S');
			title = bltSqlGetString('title');
			if(clsArt.DetectTitle(title) == 'Y')
				print title + '已经采集过了跳过！';
				sql = "UPDATE article SET state='1' WHERE id='"+bltSqlGetString('id')+"'";
				if(!bltSqlExec(sql))
					bltExit('执行'+sql+'失败');
				endif
				continue;
			endif
			maxCaijiImgs_Num = bltGetMaxUploadIMG(); //获取最多采集多少张图片
			if(bltGetMenuCheck("发布到待审核"))
				status = '2';
			else
				status = '3';
			endif
			printf('发布中...',GREEN);
			ret = bltPostData(url,array('moduleid',bltIntToStr(modid,0,'0'),
								'file','index',
								'action','add',
								'itemid',"0",
								'forward',forward,
								"post[title]",title,
								"post[content]",IMG.PostAll(bltSqlGetString('content')),
								"post[level]","1",
								"post[save_remotepic]","1",
								"post[clear_link]","1",
								"post[introduce_length]","120",
								"post[thumb_no]","1",
								"post[status]",status,
								"post[catid]",bltIntToStr(catid,0,'0'),
								"post[hits]",bltIntToStr(hits,0,'0'),
								"post[addtime]",bltGetTimeNow('%Y-%m-%d %H:%M:%S'),
								"post[maxcaiji_num]",maxCaijiImgs_Num,
								"submit","确定"
								),&output);
			
			if(ret > 0)
				if(bltRegexMatchFirst('<div class="head">.*?<div.*?>(提示信息)</',1,output,&match,1) < 0)
					printf('【'+ title + '】发布成功！\n',GREEN);
					sql = "UPDATE article SET state='1' WHERE id='"+bltSqlGetString('id')+"'";
					if(!bltSqlExec(sql))
						bltExit('执行'+sql+'失败');
					endif
					totalpostNum++;
				else
					if(bltRegexMatchFirst('<div class="content">\\s*?(.*?)\\s*?<div',1,output,&match,1) >= 0)
						printf('【'+ title + '】发布失败！原因：' + match + '\n',RED);
					else
						printf('【'+ title + '】发布失败！原因未知，请在对应模块脚本中使用print或printf或bltInfoBox等进行调试分析\n' ,RED);
					endif
				endif
			else
				printf('【'+ title + '】发布未知！\n',RED);
			endif
			//break;
		endfor //for(;bltSqlMoveToNext();bltAddProgressEx(RowCount,totalRowCount))
		bltSqlRelease();
	endfun //fun PostDataToWeb()

	/*获取当前资讯模块在本地数据库中待发布上传的数据的总记录数*/
	fun GetTotalNum()
		global catid;
		sql = "SELECT count(*) as MyTotalCnt FROM article WHERE catid='" + catid + "' AND state='0'";
		if(!bltSqlTableExists('article'))
			return 0;
		endif
		if(!bltSqlQuery(sql))
			bltExit('查询'+sql+'失败');
		endif
		if(bltSqlMoveToNext())
			return bltConvToInt(bltSqlGetString('MyTotalCnt'));
		else
			return 0;
		endif
	endfun
endclass //class clsArt
