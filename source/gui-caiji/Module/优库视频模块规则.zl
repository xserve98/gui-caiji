//本脚本采用zengl编程语言的语法 视频模块规则
inc 'remote_local_img.zl'; //将远程图片下载到本地再上传的类
use builtin;
def TRUE 1;
def FALSE 0;
def NORMAL 0;
def RED 1;
def GREEN 2;
def MAX_DEFAULT_PAGE 100;

class ykVideoPattern
	lstPages;
	contentLinks;
	title;
	title2;
	thumb;
	video;
	content;
	tag;
	pageNum;
endclass

class ykVideo
	ykVideoPattern p;
	title;
	thumb;
	video;
	content;
	tag;
	member;
	status;
	time;
	hits;
	level;
	style;
	width;
	height;
	player;
	note;
	fee;
	template;
	preLastPage; //之前采集的最大分页号

	fun InitPatterns(obj)
		ykVideo obj;
		obj.p.lstPages = '(/search_video/q_.*?_orderby_1_page_.*?)"';
		obj.p.contentLinks = 'class="v-link">.*?href="(.*?)"';
		obj.p.title = '<title>(.*?)―在线播放';
		obj.p.title2 = 'id="subtitle">(.*?)</span>';
		obj.p.thumb = 'screenshot=(.*?)"';
		obj.p.video = '&flashUrl=(.*?)&';
		obj.p.content = 'name="description" content="(.*?)" />';
		obj.p.tag = 'name="keywords" content="(.*?)">';
		obj.p.pageNum = 'page_(\\d+?)$';
	endfun

	fun GetTitle(obj)
		ykVideo obj;
		global remote_content;
		if(bltRegexMatchFirst(obj.p.title,1,remote_content,&match,0) >=0) //匹配标题
			return obj.title = bltTrim(match);
		elif(bltRegexMatchFirst(obj.p.title2,1,remote_content,&match,0) >=0) //匹配标题
			return obj.title = bltTrim(match);
		endif
		return obj.title = '';
	endfun

	fun GetThumb(obj)
		ykVideo obj;
		global remote_content;
		if(bltRegexMatchFirst(obj.p.thumb,1,remote_content,&match,0) >=0) //匹配标题
			return obj.thumb = bltTrim(match);
		endif
		return obj.thumb = '';
	endfun

	fun GetVideo(obj)
		ykVideo obj;
		global remote_content;
		if(bltRegexMatchFirst(obj.p.video,1,remote_content,&match,0) >=0) //匹配标题
			return obj.video = bltTrim(match);
		endif
		return obj.video = '';
	endfun

	fun GetContent(obj)
		ykVideo obj;
		global remote_content;
		if(bltRegexMatchFirst(obj.p.content,1,remote_content,&match,1) >=0) //匹配标题
			return obj.content = bltTrim(match);
		endif
		return obj.content = '';
	endfun

	fun GetTag(obj)
		ykVideo obj;
		global remote_content;
		if(bltRegexMatchFirst(obj.p.tag,1,remote_content,&match,0) >=0) //匹配标题
			return obj.tag = bltTrim(match);
		endif
		return obj.tag = '';
	endfun

	fun GetOthers(obj)
		ykVideo obj;
		obj.member = 'admin';
		obj.status = '3';
		obj.time = bltGetTimeNow('%Y-%m-%d %H:%M:%S');
		obj.hits = bltIntToStr(bltRandom()%1000 + 200,0,'0');
		obj.level = '0';
		obj.style = '';
		obj.width = '480';
		obj.height = '400';
		obj.player = '0';
		obj.note = '';
		obj.fee = '';
		obj.template = '';
	endfun

	fun SetLastPage(obj)
		ykVideo obj;
		global page_links,pagecount;
		if(bltRegexMatchFirst(obj.p.pageNum,1,page_links[pagecount - 1],&match,0) >=0) //匹配分页号
			return obj.preLastPage = bltConvToInt(bltTrim(match));
		endif
		obj.preLastPage = MAX_DEFAULT_PAGE;
		print '获取不到最大分页号，将只采集前10页数据';
	endfun

	fun GetPages(obj,isFromProgress = FALSE)
		ykVideo obj;
		global remote_content,page_links,pagecount;
		if(isFromProgress == TRUE) //Progress函数调用过来的，则重新抓取分页列表内容，从最后一页抓取
			remote_content = bltCurlGetUrl('http://www.soku.com' + page_links[pagecount - 1]);
		endif
		return bltRegexMatches(obj.p.lstPages,1,remote_content,page_links,1,0); /*根据分页链接规则获取底部分页的链接*/
	endfun

	fun Progress(obj)
		ykVideo obj;
		global page_links,pagecount,pageindex;
		if(pageindex < pagecount - 1 || obj.preLastPage == MAX_DEFAULT_PAGE)
			pageindex++;
			return;
		endif
		pagecount = ykVideo.GetPages(obj,TRUE);
		for(i = 0;i < pagecount - 1;i++)
			if(bltRegexMatchFirst(obj.p.pageNum,1,page_links[i],&match,0) >=0) //匹配分页号
				if(obj.preLastPage >= bltConvToInt(bltTrim(match)))
					continue;
				else
					pageindex = i; //找到了更多分页，继续采集
					return;
				endif
			else //没匹配到，则不再采集
				pageindex = pagecount;
				return;
			endif
		endfor
		pageindex = pagecount; //没找到更多的分页，也不再采集
	endfun

	fun Debug(obj)
		ykVideo obj;
		bltInfoBox( '\n title: ' + obj.title +
			  '\n thumb: ' + obj.thumb +
			  '\n video: ' + obj.video +
			  '\n content: ' + obj.content +
			  '\n tag: ' + obj.tag 
			  );
	endfun

endclass

tablename = 'video';
Max_CaijiNum = bltGetCaijiNum();
catid = bltGetCatid();
modid = bltGetModid();
catname = bltGetCatName();
keywords = array();
mustwords = array();
caiji_url = bltGetWebUrl();
caiji_totalcount = 0;
totalpostNum = 0;
caiji_postfileName = bltGetInitManageUrl(); //获取采集的上传接口文件名

Auth.authorize(&Max_CaijiNum,caiji_url); //域名授权认证

keywords_count = bltGetKeyWords(keywords,mustwords);
if(keywords_count > 0)
	for(i=0;i<keywords_count && caiji_totalcount < Max_CaijiNum;i++)
		print '关键词'+i+':'+keywords[i] + '\n必需包含词:'+
			mustwords[i];
		escape_keyword = bltCurlEncode(bltToUTF8(keywords[i])); //优库使用的UTF8的编码
		print '转义关键词:' + escape_keyword;
		remote_url = 'http://www.soku.com/search_video/q_' + escape_keyword;
		print '采集分页：' + remote_url;
		remote_content = bltCurlGetUrl(remote_url);
		//print remote_content;
		page_links = array(); //初始化分页链接数组
		ykVideo video;
		ykVideo.InitPatterns(&video);
		ykVideo.GetPages(video);
		pagecount = bltArrayInsertString(page_links,remote_url,0); //将当前页链接也压入分页链接数组中。
		ykVideo.SetLastPage(video);
		for(pageindex = 0 ;pageindex < pagecount && caiji_totalcount < Max_CaijiNum; ykVideo.Progress(video))
			content_links = array(); //初始化内容链接数组
			if(pageindex != 0)
				print pageindex + ' 采集分页：http://www.soku.com' + page_links[pageindex];
				remote_content = bltCurlGetUrl('http://www.soku.com' + page_links[pageindex]); //得到当前分页的内容链接页面。
			endif
			contentCount = bltRegexMatches(video.p.contentLinks,1,remote_content,content_links,1,1); /*根据内容链接规则获取内容链接数组*/
			for(contentIndex = 0 ; contentIndex < contentCount && caiji_totalcount < Max_CaijiNum; contentIndex++)
				if(myCheckContentLinkExists())
					continue;
				endif
				remote_content = bltCurlGetUrl(content_links[contentIndex],TRUE); //根据文章链接得到每篇文章的内容
				print content_links[contentIndex];
				ykVideo.GetTitle(video); //匹配标题
				if(video.title =='') 
					myInsertToDb_whenError(content_links[contentIndex] + '标题为空!\n');
					continue;
				elif(myDetectTitle(video.title) == 'Y')
					myInsertToDb_whenError('<'+ video.title +'>服务端标题已经存在!\n','titleExists');
					continue;
				endif
				if(!bltCheckTitleMust(video.title,mustwords[i]))
					myInsertToDb_whenError(content_links[contentIndex] + video.title +' 不包含必须词：'+bltStrReplace('&',' ',mustwords[i]) + '\n');
					continue;
				endif
				ykVideo.GetContent(video); //匹配内容
				if(video.content =='') 
					myInsertToDb_whenError(content_links[contentIndex] + '内容为空!\n');
					continue;
				endif
				ykVideo.GetThumb(video); //匹配缩略图
				if(video.thumb =='') 
					myInsertToDb_whenError(content_links[contentIndex] + '标题图片为空!\n');
					continue;
				endif
				ykVideo.GetVideo(video); //匹配视频地址
				if(video.video =='') 
					myInsertToDb_whenError(content_links[contentIndex] + '视频地址为空!\n');
					continue;
				endif
				ykVideo.GetTag(video); //匹配视频系列
				ykVideo.GetOthers(video); //获取其他的杂项
				//ykVideo.Debug(video);

				myInsertToDb();
				//break;
			endfor
			//break;
		endfor
		//break;
	endfor
elif(keywords_count == 0)
	printf('分类的关键词为空\n',RED);
else
	printf('获取分类的关键词时发生错误\n',RED);
endif

bltCheckUserPause();
myPostDataToWeb();
bltTellSysCaijiStatus(caiji_totalcount,totalpostNum);
print '\n分类['+catname+']一共采集了'+caiji_totalcount+'条信息！发布成功'+totalpostNum+'条信息//////////////////////////////';

fun myCheckContentLinkExists()
	global tablename,content_links,contentIndex,catid;
	if(bltSqlTableExists(tablename))
		sql = "SELECT * FROM "+tablename+" WHERE linkurl='"+bltSqlEscape(content_links[contentIndex])+"' AND catid='"+catid+"'";
		if(!bltSqlQuery(sql))
			bltExit('查询'+sql+'失败');
		elif(bltSqlMoveToNext())
			print bltSqlGetString('linkurl') + '["' + bltSqlGetString('title') + ']"采集地址已经存在！';
			bltSqlRelease();
			return TRUE;
		endif
		bltSqlRelease();
		return FALSE;
	else
		bltSqlExec('CREATE TABLE '+tablename+' (id INTEGER PRIMARY KEY ASC,catid,title,content,state,linkurl,video,tag,member,thumb,status,time,hits,level,style,width,height,player,note,fee,template)');
		print '创建'+tablename+'数据库表！';
		return FALSE;
	endif
endfun

fun myCheckIsNeedSuffix() //判断是否需要后缀
	global catid,catname;
	sql = "SELECT * FROM keywords WHERE catid='"+catid+"'";
	if(!bltSqlQuery(sql))
		bltExit('查询'+sql+'失败');
	endif
	if(bltSqlMoveToNext())
		ret = bltConvToInt(bltSqlGetString('needSuffix'));
	else
		bltExit('myCheckIsNeedSuffix运行时错误: 在数据库的keywords表中没有找到分类('+catname+') 对应catid为'+catid);
	endif
	bltSqlRelease();
	return ret;
	//bltInfoBox('结果：'+ printStr);
endfun

fun myInsertToDb()
	global tablename,catname,catid,video,content_links,contentIndex,caiji_totalcount;
	ykVideo video;

	sql = "INSERT INTO "+ tablename +
			" (catid,title,content,state,linkurl,video,tag,member,thumb,status,time,hits,level,style,width,height,player,note,fee,template) VALUES ('" + 
			catid + "','" +
			bltSqlEscape(video.title) + "','" +
			bltSqlEscape(video.content) + "','0','" +
			bltSqlEscape(content_links[contentIndex]) + "','" +
			bltSqlEscape(video.video) + "','" +
			bltSqlEscape(video.tag) + "','" +
			bltSqlEscape(video.member) + "','" +
			bltSqlEscape(video.thumb) + "','" +
			bltSqlEscape(video.status) + "','" +
			bltSqlEscape(video.time) + "','" +
			bltSqlEscape(video.hits) + "','" +
			bltSqlEscape(video.level) + "','" +
			bltSqlEscape(video.style) + "','" +
			bltSqlEscape(video.width) + "','" +
			bltSqlEscape(video.height) + "','" +
			bltSqlEscape(video.player) + "','" +
			bltSqlEscape(video.note) + "','" +
			bltSqlEscape(video.fee) + "','" +
			bltSqlEscape(video.template) + "')";

	//bltInfoBox(sql);
	if(!bltSqlExec(sql))
		bltExit('执行'+sql+'失败');
	endif
	caiji_totalcount++;
	bltAddProgress(1);
	printf('采集(' + video.title + ')到本地数据库的['+catname+']分类中\n',GREEN);
endfun

fun myInsertToDb_whenError(errorStr = '',extraInfo = '')
	global tablename,catid,content_links,contentIndex;
	if(bltCheckAutoPass() || extraInfo == 'titleExists')
		errorStr = '系统自动过滤:' + errorStr;
		sql = "INSERT INTO "+ tablename +
			" (catid,title,content,state,linkurl,video,tag,member,thumb,status,time,hits,level,style,width,height,player,note,fee,template) VALUES ('" + 
			catid + "','" +
			bltSqlEscape(errorStr) + "','','1','" +
			bltSqlEscape(content_links[contentIndex]) + "','','','','','','','','','','','','','','','')";
		if(!bltSqlExec(sql))
			bltExit('执行'+sql+'失败');
		endif
	endif
	if(extraInfo == 'titleExists')
		printf(errorStr,NORMAL);
	else
		printf(errorStr,RED);
	endif
endfun

fun myPostDataToWeb()
	global tablename,catid,modid,caiji_url,catname,totalpostNum,caiji_postfileName,maxCaijiImgs_Num;
	totalRowCount = myGetTotalNum();
	if(totalRowCount <= 0)
		printf('本地数据库的采集量为0，目前['+catname+"]分类没采集到数据！跳过不继续发布！\n",RED);
		return;
	endif
	if(bltGetMenuCheck("倒序发布"))
		sql = "SELECT * FROM "+tablename+" WHERE catid='" + catid + "' AND state='0' order by id desc";
	else
		sql = "SELECT * FROM "+tablename+" WHERE catid='" + catid + "' AND state='0'";
	endif
	//sql = "SELECT * FROM "+tablename+" WHERE catid='" + catid + "' AND state='0'";
	if(!bltSqlQuery(sql))
		bltExit('查询'+sql+'失败');
	endif
	url = "http://" + caiji_url + "/"+caiji_postfileName;
	forward = "http://"+ caiji_url +"/"+caiji_postfileName+"/action/left";
	RowCount = 0;
	for(;bltSqlMoveToNext();bltAddProgressEx(RowCount,totalRowCount))
		RowCount++;
		title = bltSqlGetString('title');
		if(myDetectTitle(title) == 'Y')
			print title + '已经采集过了跳过！';
			sql = "UPDATE "+tablename+" SET state='1' WHERE id='"+bltSqlGetString('id')+"'";
			if(!bltSqlExec(sql))
				bltExit('执行'+sql+'失败');
			endif
			continue;
		endif
		maxCaijiImgs_Num = bltGetMaxUploadIMG(); //获取最多采集多少张图片
		if(bltGetMenuCheck("发布到待审核"))
			status = '2';
		else
			status = '3';
		endif
		printf('发布中...',GREEN);
		thumb = IMG.Post(bltSqlGetString('thumb'),'','','','.jpg');
		content = IMG.PostAll(bltSqlGetString('content'));
		if(bltGetMenuCheck("图片下载到本地再上传"))
			remote = '';
		else
			remote = thumb;
		endif
		ret = bltPostData(url,array('moduleid',bltIntToStr(modid,0,'0'),
							'file','index',
							'action','add',
							'itemid',"0",
							'forward',forward,
							"post[title]",title,
							"post[level]",bltSqlGetString('level'),
							"post[catid]",bltIntToStr(catid,0,'0'),
							"post[style]",bltSqlGetString('style'),
							"post[thumb]",thumb,
							"remote",remote,
							"post[video]",bltSqlGetString('video'),
							"post[width]",bltSqlGetString('width'),
							"post[height]",bltSqlGetString('height'),
							"post[player]",bltSqlGetString('player'),
							"post[content]",content,
							"post[tag]",bltSqlGetString('tag'),
							"post[username]",bltSqlGetString('member'),
							"post[status]",status,
							"post[note]",bltSqlGetString('note'),
							//"post[addtime]",bltSqlGetString('time'),
							"post[addtime]",bltGetTimeNow('%Y-%m-%d %H:%M:%S'),
							"post[hits]",bltSqlGetString('hits'),
							"post[fee]",bltSqlGetString('fee'),
							"post[template]",bltSqlGetString('template'),
							'post[clear_link]','1',
							"post[save_remotepic]","1",
							"post[maxcaiji_num]",maxCaijiImgs_Num,
							"submit","确定"
							),&output);
		if(ret > 0)
			if(bltRegexMatchFirst('<div class="head">.*?<div.*?>(提示信息)</',1,output,&match,1) < 0)
				printf('【'+ title + '】发布成功！\n',GREEN);
				sql = "UPDATE "+tablename+" SET state='1' WHERE id='"+bltSqlGetString('id')+"'";
				if(!bltSqlExec(sql))
					bltExit('执行'+sql+'失败');
				endif
				totalpostNum++;
			else
				if(bltRegexMatchFirst('<div class="content">\\s*?(.*?)\\s*?<div',1,output,&match,1) >= 0)
					printf('【'+ title + '】发布失败！原因：' + match + '\n',RED);
				else
					printf('【'+ title + '】发布失败！原因未知，请在对应模块脚本中使用print或printf或bltInfoBox等进行调试分析\n' ,RED);
				endif
			endif
		else
			printf('【'+ title + '】发布未知！\n',RED);
		endif
		//break;
	endfor
	bltSqlRelease();
endfun

fun myDetectTitle(title)
	global tablename,caiji_url,modid,catid;
	detectUrl = "http://"+ caiji_url +"/mydetectTitle.php";
	bltPostData(detectUrl,array(
					"_zlmy_detectTable",tablename,
					"_zlmy_detectTitle",title,
					"_zlmy_modid",bltIntToStr(modid,0,'0'),
					"_zlmy_catid",bltIntToStr(catid,0,'0')
					),&output);
	return output;
endfun

fun myGetTotalNum()
	global tablename,catid;
	sql = "SELECT count(*) as MyTotalCnt FROM "+tablename+" WHERE catid='" + catid + "' AND state='0'";
	if(!bltSqlTableExists(tablename))
		return 0;
	endif
	if(!bltSqlQuery(sql))
		bltExit('查询'+sql+'失败');
	endif
	if(bltSqlMoveToNext())
		return bltConvToInt(bltSqlGetString('MyTotalCnt'));
	else
		return 0;
	endif
endfun