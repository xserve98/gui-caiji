inc 'test2.zl';
use sdl;
def TEST_MACRO 'i am test macro';
class clsTest
	a;
	b;
	fun init(obj)
		clsTest obj,obj2;
		clsTestOther obj3;
		c = 3;
		d = 6;
		obj2.b = 'welcome to zengl';
		obj3.n = 'thank you!';
		print obj2.b;
		print obj3.n;
		switch(c)
		case 1:
			print 'c is 1';
			break;
		case 3:
			print 'c is 3';
			break;
		case 5:
			print 'c is 5';
			break;
		default:
			print 'init invalid c value!';
			break;
		endswitch
		print 'c is ' + c = c > 3 ? d = 9 : d = 2;
		print 'd is ' + d;
		print 'c is ' + c;
		while(obj.a > 4)
			if(obj.a > 7)
				obj.a--;
				continue;
			elif(obj.a <= 5)
				break;
			endif
			print 'i am in clsTest.init while obj.a is ' + obj.a;
			obj.a--;
		endwhile
		obj.a = 8;
		do
			if(obj.a > 7)
				obj.a--;
				continue;
			elif(obj.a <= 5)
				break;
			endif
			print 'i am in clsTest.init do while obj.a is ' + obj.a;
			obj.a--;
		dowhile(obj.a > 4)
		print m = obj.a * obj.b / 2;
	endfun

	fun OutIn(arg1,arg2)
		print 'arg1 is ' + arg1;
		print 'arg2 is ' + arg2;
	endfun
endcls

fun init()
	print 'global init';
endfun

clsTest.init();
print bltGetExtraData('name');
print bltGetExtraData('val');
//print bltGetExtraData('val2');
init();
clsTest test;
glmytest = 5;
i = 4;
floatnum = 3.677;
test.a = 8;
test.b = 10;
print 'test a is '+ test.a + ' test.b is '+ test.b;
clsTest.init(test);

a = 678;
c = array(11,22);
test = array('hello world',3,11.45,c,"haha end");
for(i=0;i<4;i++)
	print test[i];
endfor
print test[3,1];
bltPrintArray(test);
bltTestAddr(&test[0],"test[0] is modify in bltTestAddr haha");
bltPrintArray(&test);
test2 = 'i am test2';
print 'test2 is '+test2;
bltTestAddr(&test2,"test2 is modify in bltTestAddr haha");
print 'test2 is '+test2;
bltSetArray(test,'hello Set Array',44);
bltPrintArray(test);
bltLoadScript('test3.zl');
print TEST_MACRO;
print TEST2_MACRO;
print 'zengl version is v' + bltGetZLVersion();
clsTestOther.testOther();
sdlInit(xdf,'dfsf',123);

class clsTestOther
	m;
	n;
	fun testOther()
		print 'i am in testOther';
		print 'hello zengl';
	endfun
endclass


def MTRUE -000114;
def STR_TEST "23hello world";

r = 4 + MTRUE;
if(r == -110)
	print 'r is -110';
else
	print 'r not -110';
endif

print r - -10;

print 'STR_TEST is ' + STR_TEST;
